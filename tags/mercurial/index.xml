<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo tranquilpeak theme</title>
    <link>https://rubot99.github.io/tags/mercurial/index.xml</link>
    <description>Recent content on Hugo tranquilpeak theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://rubot99.github.io/tags/mercurial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Setting Up Mercurial Dev Shop</title>
      <link>https://rubot99.github.io/2011/04/setting-up-mercurial-dev-shop/</link>
      <pubDate>Wed, 20 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://rubot99.github.io/2011/04/setting-up-mercurial-dev-shop/</guid>
      <description>&lt;p&gt;For a long time I have wanted to use a distributed source control management tool at work. I have looked at both Mercurial and Git and decided that I would like try Mercurial. So recently I have had the opportunity to use Mercurial on a new project.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I have used Visual Source Safe briefly and have mostly used Subversion with TortoiseSVN. So I found it quite easy to switch to TortoiseHg. I am still getting to grips with Mercurial, but I have really enjoyed using it and think I will permanently move to using Mercurial.&lt;/p&gt;

&lt;p&gt;Finally I wanted to setup a stable repository for the project so that I could push my changes to a Mercurial server and in the future setup cruise control to pull the changes from a central location. Also it would allow my manager to view the changes without having TortosieHg installed on his machine.&lt;/p&gt;

&lt;p&gt;Since we are a Microsoft dev shop, I decided it would be easier to setup Mercurial on IIS. I found quite a few posts on setting up Mercurial on IIS 7, but had quite a difficult time getting it to work. I have also found differences in the setup process for Windows Server 2008 R2 (64 bit) and Windows Server 2008 (32 bit). So in this post I am going to list the blog articles that helped me to setup a Mercurial server successfully.&lt;/p&gt;

&lt;p&gt;I started off by experimenting on a Windows Server 2008 (32 bit) VM (Virtual Machine). After many attempts I finally found a combination of two blogs post that helped me get Mercurial running.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jake Murzy’s Blog – Installing and Setting Up Mercurial on Windows/IIS7 running Python&lt;/li&gt;
&lt;li&gt;Matt Hawley – Setting up Mercurial server in IIS7 using a ISAPI module&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: I didn’t have a problem installing isapi-wsgi on the virtual machine since the virtual machine had the MSVCR71.dll file in the System32 folder.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VM Details: 32-bit Microsoft Windows Server 2008, 1GB RAM and 16GB HDD running on VMWare server.&lt;/p&gt;

&lt;p&gt;The Virtual Machine also had the following software products installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mozilla Firefox/Chrome&lt;/li&gt;
&lt;li&gt;7 zip&lt;/li&gt;
&lt;li&gt;Notepad++&lt;/li&gt;
&lt;li&gt;VM Ware tools&lt;/li&gt;
&lt;li&gt;IIS 7 with IIS 6 Management Compatibility and Application development services installed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After following the instructions from the two posts I got the Mercurial web interface working. However when I came to install it on a server running Windows 2008 R2 (64 bit), I couldn’t seem to get it to work. So after googling a bit I found the following post which helped me get Mercurial setup on my server.&lt;/p&gt;

&lt;p&gt;Stacking Code – &lt;a href=&#34;http://stackingcode.com/blog/2011/02/24/running-a-mercurial-server-on-iis-7-5-windows-server-2008-r2&#34;&gt;Running a Mercurial Server on IIS 7.5&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>